plugins {
    id "com.github.johnrengelman.shadow" version "8.1.1"
    id "com.modrinth.minotaur" version "2.+"
    id 'net.darkhax.curseforgegradle' version '1.1.15'
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath

    forge {
        mixinConfigs = [ "walkers-forge.mixins.json", "walkers.mixins.json" ]

        convertAccessWideners = true
        extraAccessWideners.add loom.accessWidenerPath.get().asFile.name
    }
}

architectury {
    platformSetupLoomIde()
    forge()
}

configurations {
    common
    shadowCommon
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.minecraft_version}-${rootProject.forge_version}"
    modApi "dev.tocraft:craftedcore:${rootProject.minecraft_version}-forge-${rootProject.craftedcore_version}"

    common(project(path: ":common", configuration: "namedElements")) { transitive = false }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }
}

processResources {
    inputs.property "version", project.version.toString()

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version.toString()
    }
}

shadowJar {
    exclude "fabric.mod.json"
    configurations = [project.configurations.shadowCommon]
    archiveClassifier.set("dev-shadow")
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    archiveClassifier.set("forge")
}

jar {
    archiveClassifier.set("dev")
}

sourcesJar {
    afterEvaluate {
        [":common"].forEach {
            def depSources = project(it).sourcesJar
            dependsOn depSources
            from(depSources.archiveFile.map { zipTree(it) }) {
                exclude "architectury.accessWidener"
            }
        }
    }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

modrinth {
    token = System.getenv("MODRINTH_TOKEN")
    projectId = "woodwalkers"
    versionNumber = rootProject.minecraft_version + "-" + project.name + "-" + rootProject.mod_version
    versionType = "release"
    uploadFile = remapJar
    gameVersions = [rootProject.minecraft_version]
    loaders = [project.name]
    changelog = "https://github.com/ToCraft/woodwalkers-mod/releases/tag/" + rootProject.mod_version + "-" + rootProject.minecraft_version
    dependencies {
        required.version "crafted-core", rootProject.minecraft_version + "-" + project.name + "-" + rootProject.craftedcore_version
    }
}

task curseforge(type: net.darkhax.curseforgegradle.TaskPublishCurseForge) {
    apiToken = System.getenv("CURSEFORGE_TOKEN")
    
    // The main file to upload
    def mainFile = upload(868922, remapJar)
    mainFile.displayName = rootProject.minecraft_version + "-" + project.name + "-" + rootProject.mod_version
    mainFile.releaseType = 'release'
    mainFile.addModLoader(project.name)
    mainFile.addRequirement("crafted-core")
    mainFile.changelog = "https://github.com/ToCraft/woodwalkers-mod/releases/tag/" + rootProject.mod_version + "-" + rootProject.minecraft_version
}