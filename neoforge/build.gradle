plugins {
    id "com.github.johnrengelman.shadow" version "8.1.1"
    id "me.shedaniel.unified-publishing"
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath
}

architectury {
    platformSetupLoomIde()
    neoForge()
}

configurations {
    common
    shadowCommon
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

dependencies {
    neoForge "net.neoforged:neoforge:${rootProject.neoforge_version}"
    modApi "dev.architectury:architectury-neoforge:${rootProject.architectury_version}"
    modApi "dev.tocraft:craftedcore-neoforge:${rootProject.minecraft_version}-${rootProject.craftedcore_version}"

    common(project(path: ":common", configuration: "namedElements")) { transitive = false }
    shadowCommon(project(path: ":common", configuration: "transformProductionNeoForge")) { transitive = false }
}

processResources {
    filesMatching("META-INF/mods.toml") {
        expand project.properties
    }
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    //exclude "walkers-common-refmap.json"
    archiveClassifier.set("neoforge-dev-shadow")
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    atAccessWideners.add "walkers.accesswidener"
    archiveClassifier.set("neoforge")
}

jar {
    archiveClassifier.set("neoforge-dev")
}

sourcesJar {
    duplicatesStrategy 'exclude'
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.archivesBaseName + "-$project.name"
            version = rootProject.minecraft_version + "-" + rootProject.mod_version
            from components.java
        }
    }
    repositories {
        if (System.getenv("MAVEN_PASS") != null) {
            maven {
                name = "tocraftMavenPublic"
                url "https://maven.tocraft.dev/public"

                credentials {
                    username = "tocraft"
                    password = System.getenv("MAVEN_PASS")
                }
            }
        }
    }
}

unifiedPublishing {
    project {
        displayName = "$rootProject.minecraft_version-$project.name-$project.version"
        releaseType = "$rootProject.artifact_type"
        changelog = releaseChangelog()
        gameVersions = []
        gameLoaders = ["neoforge"]
        mainPublication remapJar
        relations {
            depends {
                curseforge = "crafted-core"
                modrinth = "crafted-core"
            }
        }

        String[] supportedVersions = rootProject.supported_versions.split(",")
        supportedVersions.each { gameVersions.add(it.trim()) }

        var CURSE_API_KEY = project.findProperty("CURSEFORGE_TOKEN") ?: System.getenv("CURSEFORGE_TOKEN")
        if (CURSE_API_KEY != null) {
            curseforge {
                token = CURSE_API_KEY
                id = rootProject.curseforge_id
                gameVersions.add "Java 17"
            }
        }

        var MODRINTH_TOKEN = project.findProperty("MODRINTH_TOKEN") ?: System.getenv("MODRINTH_TOKEN")
        if (MODRINTH_TOKEN != null) {
            modrinth {
                token = MODRINTH_TOKEN
                id = rootProject.modrinth_id
                version = "$project.version+$project.name"
            }
        }
    }
}